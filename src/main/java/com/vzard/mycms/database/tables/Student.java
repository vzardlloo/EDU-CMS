/*
 * This file is generated by jOOQ.
*/
package com.vzard.mycms.database.tables;


import com.vzard.mycms.database.Keys;
import com.vzard.mycms.database.MyCms;
import com.vzard.mycms.database.tables.records.StudentRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Student extends TableImpl<StudentRecord> {

    private static final long serialVersionUID = -1503831846;

    /**
     * The reference instance of <code>my-cms.student</code>
     */
    public static final Student STUDENT = new Student();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StudentRecord> getRecordType() {
        return StudentRecord.class;
    }

    /**
     * The column <code>my-cms.student.id</code>.
     */
    public final TableField<StudentRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>my-cms.student.number</code>. 学号
     */
    public final TableField<StudentRecord, String> NUMBER = createField("number", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "学号");

    /**
     * The column <code>my-cms.student.name</code>. 姓名
     */
    public final TableField<StudentRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "姓名");

    /**
     * The column <code>my-cms.student.password</code>. 密码
     */
    public final TableField<StudentRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "密码");

    /**
     * The column <code>my-cms.student.gender</code>. 性别
     */
    public final TableField<StudentRecord, String> GENDER = createField("gender", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "性别");

    /**
     * The column <code>my-cms.student.birthday</code>. 生日
     */
    public final TableField<StudentRecord, Timestamp> BIRTHDAY = createField("birthday", org.jooq.impl.SQLDataType.TIMESTAMP, this, "生日");

    /**
     * The column <code>my-cms.student.clbum</code>. 所在班级
     */
    public final TableField<StudentRecord, String> CLBUM = createField("clbum", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "所在班级");

    /**
     * The column <code>my-cms.student.academy</code>. 所在学院
     */
    public final TableField<StudentRecord, String> ACADEMY = createField("academy", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "所在学院");

    /**
     * The column <code>my-cms.student.created_at</code>. 创建时间
     */
    public final TableField<StudentRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>my-cms.student.updated_at</code>. 更新时间
     */
    public final TableField<StudentRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "更新时间");

    /**
     * Create a <code>my-cms.student</code> table reference
     */
    public Student() {
        this("student", null);
    }

    /**
     * Create an aliased <code>my-cms.student</code> table reference
     */
    public Student(String alias) {
        this(alias, STUDENT);
    }

    private Student(String alias, Table<StudentRecord> aliased) {
        this(alias, aliased, null);
    }

    private Student(String alias, Table<StudentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MyCms.MY_CMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StudentRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STUDENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StudentRecord> getPrimaryKey() {
        return Keys.KEY_STUDENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StudentRecord>> getKeys() {
        return Arrays.<UniqueKey<StudentRecord>>asList(Keys.KEY_STUDENT_PRIMARY, Keys.KEY_STUDENT_NUMBER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Student as(String alias) {
        return new Student(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Student rename(String name) {
        return new Student(name, null);
    }
}
