/*
 * This file is generated by jOOQ.
*/
package com.vzard.mycms.database.tables;


import com.vzard.mycms.database.Keys;
import com.vzard.mycms.database.MyCms;
import com.vzard.mycms.database.tables.records.CourseRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Course extends TableImpl<CourseRecord> {

    private static final long serialVersionUID = 1559038517;

    /**
     * The reference instance of <code>my-cms.course</code>
     */
    public static final Course COURSE = new Course();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CourseRecord> getRecordType() {
        return CourseRecord.class;
    }

    /**
     * The column <code>my-cms.course.id</code>.
     */
    public final TableField<CourseRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>my-cms.course.number</code>. 课程号
     */
    public final TableField<CourseRecord, String> NUMBER = createField("number", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "课程号");

    /**
     * The column <code>my-cms.course.name</code>. 课程名称
     */
    public final TableField<CourseRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "课程名称");

    /**
     * The column <code>my-cms.course.credit</code>. 学分
     */
    public final TableField<CourseRecord, String> CREDIT = createField("credit", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "学分");

    /**
     * The column <code>my-cms.course.period</code>. 学时
     */
    public final TableField<CourseRecord, String> PERIOD = createField("period", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "学时");

    /**
     * The column <code>my-cms.course.teacher</code>. 任课教师
     */
    public final TableField<CourseRecord, String> TEACHER = createField("teacher", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "任课教师");

    /**
     * The column <code>my-cms.course.time</code>. 上课时间
     */
    public final TableField<CourseRecord, String> TIME = createField("time", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "上课时间");

    /**
     * The column <code>my-cms.course.classroom</code>. 上课教室
     */
    public final TableField<CourseRecord, String> CLASSROOM = createField("classroom", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "上课教室");

    /**
     * The column <code>my-cms.course.max_choosed</code>. 最大容量
     */
    public final TableField<CourseRecord, Long> MAX_CHOOSED = createField("max_choosed", org.jooq.impl.SQLDataType.BIGINT, this, "最大容量");

    /**
     * The column <code>my-cms.course.has_choosed</code>. 已选人数
     */
    public final TableField<CourseRecord, Long> HAS_CHOOSED = createField("has_choosed", org.jooq.impl.SQLDataType.BIGINT, this, "已选人数");

    /**
     * The column <code>my-cms.course.created_at</code>. 创建时间
     */
    public final TableField<CourseRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>my-cms.course.updated_at</code>. 更新时间
     */
    public final TableField<CourseRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "更新时间");

    /**
     * Create a <code>my-cms.course</code> table reference
     */
    public Course() {
        this("course", null);
    }

    /**
     * Create an aliased <code>my-cms.course</code> table reference
     */
    public Course(String alias) {
        this(alias, COURSE);
    }

    private Course(String alias, Table<CourseRecord> aliased) {
        this(alias, aliased, null);
    }

    private Course(String alias, Table<CourseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MyCms.MY_CMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CourseRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COURSE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CourseRecord> getPrimaryKey() {
        return Keys.KEY_COURSE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CourseRecord>> getKeys() {
        return Arrays.<UniqueKey<CourseRecord>>asList(Keys.KEY_COURSE_PRIMARY, Keys.KEY_COURSE_NUMBER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Course as(String alias) {
        return new Course(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Course rename(String name) {
        return new Course(name, null);
    }
}
